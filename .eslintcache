[{"/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/index.js":"1","/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/App.js":"2","/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/library/interact.js":"3","/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/library/connect.js":"4","/Users/yuvrajsinghdeora/Desktop/Blockchain FIR/src/index.js":"5","/Users/yuvrajsinghdeora/Desktop/Blockchain FIR/src/App.js":"6","/Users/yuvrajsinghdeora/Desktop/Blockchain FIR/src/library/interact.js":"7","/Users/yuvrajsinghdeora/Desktop/Blockchain FIR/src/library/connect.js":"8","/Users/yuvrajsinghdeora/Desktop/LandRegistry_Blockchain/src/index.js":"9","/Users/yuvrajsinghdeora/Desktop/LandRegistry_Blockchain/src/App.js":"10","/Users/yuvrajsinghdeora/Desktop/LandRegistry_Blockchain/src/library/interact.js":"11","/Users/yuvrajsinghdeora/Desktop/LandRegistry_Blockchain/src/library/connect.js":"12"},{"size":219,"mtime":1656119755935,"results":"13","hashOfConfig":"14"},{"size":4858,"mtime":1656222725783,"results":"15","hashOfConfig":"14"},{"size":1873,"mtime":1656223057570,"results":"16","hashOfConfig":"14"},{"size":619,"mtime":1656119755936,"results":"17","hashOfConfig":"14"},{"size":219,"mtime":1661427809271,"results":"18","hashOfConfig":"19"},{"size":6842,"mtime":1661427809270,"results":"20","hashOfConfig":"19"},{"size":1923,"mtime":1661427809272,"results":"21","hashOfConfig":"19"},{"size":619,"mtime":1661427809272,"results":"22","hashOfConfig":"19"},{"size":219,"mtime":1661427809271,"results":"23","hashOfConfig":"24"},{"size":6797,"mtime":1668568736969,"results":"25","hashOfConfig":"24"},{"size":1885,"mtime":1668133537220,"results":"26","hashOfConfig":"24"},{"size":619,"mtime":1661427809272,"results":"27","hashOfConfig":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1xjhxvp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1sa0ixz",{"filePath":"40","messages":"41","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"9eq6ji",{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/index.js",[],["59","60"],"/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/App.js",["61","62","63","64"],"/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/library/interact.js",[],"/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/library/connect.js",[],"/Users/yuvrajsinghdeora/Desktop/Blockchain FIR/src/index.js",[],["65","66"],"/Users/yuvrajsinghdeora/Desktop/Blockchain FIR/src/App.js",["67","68","69","70","71","72","73","74","75"],"import \"./App.css\";\nimport * as config from \"./library/config.json\";\nimport React, { useEffect, useState } from \"react\";\nimport { add, getValue, multiply, update } from \"./library/interact\";\nimport { connectWalletBeacon, setup } from \"./library/connect\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n background: lavender;\n padding: 20px;\n\n h1 {\n   border-bottom: 1px solid white;\n   color: #3d3d3d;\n   font-family: sans-serif;\n   font-size: 20px;\n   font-weight: 600;\n   line-height: 24px;\n   padding: 10px;\n   text-align: center;\n }\n\n form {\n   background: white;\n   border: 1px solid #dedede;\n   display: flex;\n   flex-direction: column;\n   justify-content: space-around;\n   margin: 0 auto;\n   max-width: 500px;\n   padding: 30px 50px;\n }\n\n input {\n   border: 1px solid #d9d9d9;\n   border-radius: 4px;\n   box-sizing: border-box;\n   padding: 10px;\n   width: 100%;\n }\n\n label {\n   color: #3d3d3d;\n   display: block;\n   font-family: sans-serif;\n   font-size: 14px;\n   font-weight: 500;\n   margin-bottom: 5px;\n }\n\n .error {\n   color: red;\n   font-family: sans-serif;\n   font-size: 12px;\n   height: 30px;\n }\n\n .submitButton {\n   background-color: #6976d9;\n   color: white;\n   font-family: sans-serif;\n   font-size: 14px;\n   margin: 20px 0px;\n`;\n const App = () => {\n  const [Tezos, setTezos] = useState(undefined);\n  const [status, setStatus] = useState(\"No Operations Performed\");\n  const [value, setValue] = useState(0);\n  const [loader, setLoader] = useState(true);\n  const { register, handleSubmit } = useForm();\n  useEffect(() => {\n    console.log(\"run\");\n    setup().then(setTezos).catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    if (Tezos === undefined) return;\n    getValue(Tezos)\n      .then(setValue)\n      .then(() => setLoader(false))\n      .catch(console.error);\n    const timer = setInterval(() => {\n      getValue(Tezos).then(setValue).catch(console.error);\n    }, 60000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [Tezos]);\n\n  const handleEvent = async (e, func, params) => {\n    e.preventDefault();\n    try {\n      const wal = await connectWalletBeacon();\n      Tezos.setWalletProvider(wal);\n      setLoader(true);\n      await func(Tezos, params, setStatus);\n      await getValue(Tezos)\n        .then(setValue)\n        .then(() => setLoader(false));\n    } catch (err) {\n      console.error(err);\n      alert(\"Couldn't connect wallet\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n     <h1>Satyavachan</h1>\n      <Styles>\n      <form\n        onSubmit={async (e) => {\n          await handleEvent(e, update,\n        {\n          Complaint:e.target.Complaint.value,\n          Date1: e.target.Date1.value,\n          Dirps:e.target.Dirps.value,\n          DisPs: e.target.DisPs.value,\n          Doa:e.target.Doa.value,\n          Dow:e.target.Dow.value,\n          NoO: e.target.NoO.value,\n          PhoneNumber: e.target.PhoneNumber.value,\n          Section: e.target.Section.value,\n          address: e.target.address.value,\n          age: e.target.age.value,\n          fathersName: e.target.fathersName.value,\n          gender: e.target.gender.value,\n          name: e.target.name.value,\n          pop: e.target.pop.value,\n          time: e.target.time.value,\n          uid: e.target.uid.value,\n        }\n            );\n        }}\n      >\n        <label>Name : </label>\n        <input type=\"text\" name=\"name\" step=\"1\" /><br></br>\n        <label>Fathers Name : </label>\n        <input type=\"text\" name=\"fathersName\" step=\"1\" /><br></br>\n        <label>Gender : </label>\n        <input type=\"text\" name=\"gender\" step=\"1\" /><br></br>\n        <label>Aadhar Number : </label>\n        <input type=\"number\" name=\"uid\" step=\"1\" /><br></br>\n        <label> Age : </label>\n        <input type=\"number\" name=\"age\" step=\"1\" /><br></br>\n        <label>Phone : </label>\n        <input type=\"number\" name=\"PhoneNumber\" step=\"1\" /><br></br>\n        <label> Distance from police station where accident occurred : </label>\n        <input type=\"text\" name=\"DisPs\" step=\"1\" /><br></br>\n        <label>Direction from police station where accident occurred : </label>\n        <input type=\"text\" name=\"Dirps\" step=\"1\" /><br></br>\n        <label>Address : </label>\n        <input type=\"text\" name=\"address\" step=\"1\" /><br></br>\n        <label>Date of Offence : </label>\n        <input type=\"text\" name=\"Date1\" step=\"1\" /><br></br>\n        <label>Time of Offence: </label>\n        <input type=\"text\" name=\"time\" step=\"1\" /><br></br>\n        <label>Nature of Offence : </label>\n        <input type=\"text\" name=\"NoO\" step=\"1\" /><br></br>\n        <label>Section Applicable : </label>\n        <input type=\"text\" name=\"Section\" step=\"1\" /><br></br>\n        <label>Particulars of the property : </label>\n        <input type=\"text\" name=\"pop\" step=\"1\" /><br></br>\n        <label>Description of the Accused : </label>\n        <input type=\"text\" name=\"Doa\" step=\"1\" /><br></br>\n        <label>Description of Witness : </label>\n        <input type=\"text\" name=\"Dow\" step=\"1\" /><br></br>\n        <label>Complaint : </label>\n        <input type=\"text\" name=\"Complaint\" step=\"1\" /><br></br>\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n      </Styles>\n      {/* <form\n        onSubmit={async (e) => {\n          await handleEvent(e, multiply, e.target.mul.value);\n        }}\n      >\n        <label>Multiply : </label>\n        <input type=\"number\" name=\"mul\" step=\"1\" />\n        <input type=\"submit\" value=\"Multiply\" />\n      </form>\n      <form\n        onSubmit={async (e) => {\n          await handleEvent(e, add, {\n            a: e.target.a.value,\n            b: e.target.b.value,\n          });\n        }}\n      >\n        <label>Add : </label>\n        <input type=\"number\" name=\"a\" step=\"1\" />\n        <input type=\"number\" name=\"b\" step=\"1\" />\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n      <p dangerouslySetInnerHTML={{ __html: \"Tx Status : \" + status }}></p> */}\n    </div>\n  );\n};\n\nconst Loader = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      style={{\n        margin: \"auto\",\n        display: \"block\",\n        marginTop: \"3vw\",\n        marginBottom: \"-1vw\",\n      }}\n      width=\"3vw\"\n      height=\"3vw\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n    >\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        fill=\"none\"\n        stroke=\"#0a0a0a\"\n        strokeWidth=\"10\"\n        r=\"35\"\n        strokeDasharray=\"164.93361431346415 56.97787143782138\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n        ></animateTransform>\n      </circle>\n    </svg>\n  );\n};\n\nexport default App;","/Users/yuvrajsinghdeora/Desktop/Blockchain FIR/src/library/interact.js",[],"/Users/yuvrajsinghdeora/Desktop/Blockchain FIR/src/library/connect.js",[],["76","77"],"/Users/yuvrajsinghdeora/Desktop/LandRegistry_Blockchain/src/index.js",[],["78","79"],"/Users/yuvrajsinghdeora/Desktop/LandRegistry_Blockchain/src/App.js",["80","81","82","83","84","85","86","87","88","89","90"],"import \"./App.css\";\nimport * as config from \"./library/config.json\";\nimport React, { useEffect, useState } from \"react\";\nimport { add, getValue, multiply, update } from \"./library/interact\";\nimport { connectWalletBeacon, setup } from \"./library/connect\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport AES from 'crypto-js/aes';\nimport Utf8 from 'crypto-js/enc-utf8';\n// const encryptWithAES = (text, passphrase) => {\n//   return AES.encrypt(text, passphrase).toString();\n// };\n\n// const decryptWithAES = (ciphertext, passphrase) => {\n//   const bytes = AES.decrypt(ciphertext, passphrase);\n//   const originalText = bytes.toString(Utf8);\n//   return originalText;\n// };\n \nconst Styles = styled.div`\n background: lavender;\n padding: 20px;\n\n h1 {\n   border-bottom: 1px solid white;\n   color: #3d3d3d;\n   font-family: sans-serif;\n   font-size: 20px;\n   font-weight: 600;\n   line-height: 24px;\n   padding: 10px;\n   text-align: center;\n }\n\n form {\n   background: white;\n   border: 1px solid #dedede;\n   display: flex;\n   flex-direction: column;\n   justify-content: space-around;\n   margin: 0 auto;\n   max-width: 500px;\n   padding: 30px 50px;\n }\n\n input {\n   border: 1px solid #d9d9d9;\n   border-radius: 4px;\n   box-sizing: border-box;\n   padding: 10px;\n   width: 100%;\n }\n\n label {\n   color: #3d3d3d;\n   display: block;\n   font-family: sans-serif;\n   font-size: 14px;\n   font-weight: 500;\n   margin-bottom: 5px;\n }\n\n .error {\n   color: red;\n   font-family: sans-serif;\n   font-size: 12px;\n   height: 30px;\n }\n\n .submitButton {\n   background-color: #6976d9;\n   color: white;\n   font-family: sans-serif;\n   font-size: 14px;\n   margin: 20px 0px;\n`;\n const App = () => {\n  const [Tezos, setTezos] = useState(undefined);\n  const [status, setStatus] = useState(\"No Operations Performed\");\n  const [value, setValue] = useState(0);\n  const [loader, setLoader] = useState(true);\n  const { register, handleSubmit } = useForm();\n  useEffect(() => {\n    console.log(\"run\");\n    setup().then(setTezos).catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    if (Tezos === undefined) return;\n    getValue(Tezos)\n      .then(setValue)\n      .then(() => setLoader(false))\n      .catch(console.error);\n    const timer = setInterval(() => {\n      getValue(Tezos).then(setValue).catch(console.error);\n    }, 60000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [Tezos]);\n\n  const handleEvent = async (e, func, params) => {\n    e.preventDefault();\n    try {\n      const wal = await connectWalletBeacon();\n      Tezos.setWalletProvider(wal);\n      setLoader(true);\n      await func(Tezos, params, setStatus);\n      await getValue(Tezos)\n        .then(setValue)\n        .then(() => setLoader(false));\n    } catch (err) {\n      console.error(err);\n      alert(\"Couldn't connect wallet\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n     <h1>Land Registry Using Blockchain</h1>\n      <Styles>\n      <form\n        onSubmit={async (e) => {\n          await handleEvent(e, update,\n        {\n          link: e.target.link.value,\n          lno:e.target.lno.value,\n          gender: e.target.gender.value,\n          name: e.target.name.value,\n          rate: e.target.rate.value,\n          time:e.target.time.value,\n          uid:e.target.uid.value,\n          PhoneNumber: e.target.PhoneNumber.value,\n          address: e.target.address.value,\n          Date1:e.target.Date1.value,\n          comments: e.target.comments.value,\n          fathersName: e.target.fathersName.value,\n          age: e.target.age.value,\n          area: e.target.area.value,\n        }\n            );\n        }}\n      >\n        <label>Name : </label>\n        <input type=\"text\" name=\"name\" step=\"1\" /><br></br>\n        <label>Fathers Name : </label>\n        <input type=\"text\" name=\"fathersName\" step=\"1\" /><br></br>\n        <label>Gender : </label>\n        <input type=\"text\" name=\"gender\" step=\"1\" /><br></br>\n        <label>Aadhar Number : </label>\n        <input type=\"number\" name=\"uid\" step=\"1\" /><br></br>\n        <label> Age : </label>\n        <input type=\"number\" name=\"age\" step=\"1\" /><br></br>\n        <label>Phone : </label>\n        <input type=\"number\" name=\"PhoneNumber\" step=\"1\" /><br></br>\n        <b>Enter the land Property Details</b>\n        <label> Land no./ Khasra No. :</label>\n        <input type=\"text\" name=\"lno\" step=\"1\" /><br></br>\n        <label>Area in sqms : </label>\n        <input type=\"text\" name=\"area\" step=\"1\" /><br></br>\n        <label>Address : </label>\n        <input type=\"text\" name=\"address\" step=\"1\" /><br></br>\n        <label>Date of Registry : </label>\n        <input type=\"text\" name=\"Date1\" step=\"1\" /><br></br>\n        <label>Time of Registry : </label>\n        <input type=\"text\" name=\"time\" step=\"1\" /><br></br>\n        <label>Rate per sqm of Land : </label>\n        <input type=\"text\" name=\"rate\" step=\"1\" /><br></br>\n        <label>Link to document containing Satellite Map image of land : </label>\n        <input type=\"text\" name=\"link\" step=\"1\" /><br></br>\n        <label>Comments : </label>\n        <input type=\"text\" name=\"comments\" step=\"1\" /><br></br>\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n      </Styles>\n      {/* <form\n        onSubmit={async (e) => {\n          await handleEvent(e, multiply, e.target.mul.value);\n        }}\n      >\n        <label>Multiply : </label>\n        <input type=\"number\" name=\"mul\" step=\"1\" />\n        <input type=\"submit\" value=\"Multiply\" />\n      </form>\n      <form\n        onSubmit={async (e) => {\n          await handleEvent(e, add, {\n            a: e.target.a.value,\n            b: e.target.b.value,\n          });\n        }}\n      >\n        <label>Add : </label>\n        <input type=\"number\" name=\"a\" step=\"1\" />\n        <input type=\"number\" name=\"b\" step=\"1\" />\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n      <p dangerouslySetInnerHTML={{ __html: \"Tx Status : \" + status }}></p> */}\n    </div>\n  );\n};\n\nconst Loader = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      style={{\n        margin: \"auto\",\n        display: \"block\",\n        marginTop: \"3vw\",\n        marginBottom: \"-1vw\",\n      }}\n      width=\"3vw\"\n      height=\"3vw\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n    >\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        fill=\"none\"\n        stroke=\"#0a0a0a\"\n        strokeWidth=\"10\"\n        r=\"35\"\n        strokeDasharray=\"164.93361431346415 56.97787143782138\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n        ></animateTransform>\n      </circle>\n    </svg>\n  );\n};\n\nexport default App;","/Users/yuvrajsinghdeora/Desktop/LandRegistry_Blockchain/src/library/interact.js",[],["91","92"],"/Users/yuvrajsinghdeora/Desktop/LandRegistry_Blockchain/src/library/connect.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":13,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":4,"column":25,"nodeType":"99","messageId":"100","endLine":4,"endColumn":33},{"ruleId":"97","severity":1,"message":"103","line":9,"column":10,"nodeType":"99","messageId":"100","endLine":9,"endColumn":16},{"ruleId":"93","replacedBy":"104"},{"ruleId":"95","replacedBy":"105"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":13,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":4,"column":25,"nodeType":"99","messageId":"100","endLine":4,"endColumn":33},{"ruleId":"97","severity":1,"message":"103","line":67,"column":10,"nodeType":"99","messageId":"100","endLine":67,"endColumn":16},{"ruleId":"97","severity":1,"message":"106","line":68,"column":10,"nodeType":"99","messageId":"100","endLine":68,"endColumn":15},{"ruleId":"97","severity":1,"message":"107","line":69,"column":10,"nodeType":"99","messageId":"100","endLine":69,"endColumn":16},{"ruleId":"97","severity":1,"message":"108","line":70,"column":11,"nodeType":"99","messageId":"100","endLine":70,"endColumn":19},{"ruleId":"97","severity":1,"message":"109","line":70,"column":21,"nodeType":"99","messageId":"100","endLine":70,"endColumn":33},{"ruleId":"97","severity":1,"message":"110","line":200,"column":7,"nodeType":"99","messageId":"100","endLine":200,"endColumn":13},{"ruleId":"93","replacedBy":"111"},{"ruleId":"95","replacedBy":"112"},{"ruleId":"93","replacedBy":"113"},{"ruleId":"95","replacedBy":"114"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":13,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":4,"column":25,"nodeType":"99","messageId":"100","endLine":4,"endColumn":33},{"ruleId":"97","severity":1,"message":"115","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":11},{"ruleId":"97","severity":1,"message":"116","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":12},{"ruleId":"97","severity":1,"message":"103","line":79,"column":10,"nodeType":"99","messageId":"100","endLine":79,"endColumn":16},{"ruleId":"97","severity":1,"message":"106","line":80,"column":10,"nodeType":"99","messageId":"100","endLine":80,"endColumn":15},{"ruleId":"97","severity":1,"message":"107","line":81,"column":10,"nodeType":"99","messageId":"100","endLine":81,"endColumn":16},{"ruleId":"97","severity":1,"message":"108","line":82,"column":11,"nodeType":"99","messageId":"100","endLine":82,"endColumn":19},{"ruleId":"97","severity":1,"message":"109","line":82,"column":21,"nodeType":"99","messageId":"100","endLine":82,"endColumn":33},{"ruleId":"97","severity":1,"message":"110","line":204,"column":7,"nodeType":"99","messageId":"100","endLine":204,"endColumn":13},{"ruleId":"93","replacedBy":"117"},{"ruleId":"95","replacedBy":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'add' is defined but never used.","'multiply' is defined but never used.","'status' is assigned a value but never used.",["119"],["120"],"'value' is assigned a value but never used.","'loader' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Loader' is assigned a value but never used.",["119"],["120"],["119"],["120"],"'AES' is defined but never used.","'Utf8' is defined but never used.",["119"],["120"],"no-global-assign","no-unsafe-negation"]